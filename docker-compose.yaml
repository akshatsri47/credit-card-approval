version: "3.11"

services:
  db:
    image: postgres:15
    container_name: credit_db
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: credit_redis
    restart: always
    ports:
      - "6379:6379"

  web:
    build: .
    container_name: credit_backend
    env_file:
      - .env
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    command: >
      sh -c "
        echo '⏳ Waiting for Postgres…' &&
        until pg_isready -h db -U \"$POSTGRES_USER\" -d \"$POSTGRES_DB\"; do sleep 1; done &&
        echo '🛠️  Migrating DB…' &&
        python manage.py migrate --noinput &&
        echo '🚀 Enqueuing import task…' &&
        python manage.py import_data &&
        echo '🚀 Starting server…' &&
        python manage.py runserver 0.0.0.0:8000
      "

  celery:
    build: .
    container_name: credit_celery
    command: celery -A credit_approval worker --loglevel=info
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - db
      - redis

volumes:
  postgres_data:
